{"version":3,"sources":["img/Blocks/Grass_A.png","img/Blocks/Decor_B.png","modules/Server.js","components/auth.js","modules/Canvas.js","components/game.js","App.js","index.js"],"names":["module","exports","Server","HOST","method","data","key","arr","push","fetch","this","join","response","json","answer","result","send","id","direction","Auth","props","authRequest","setAuth","login","document","getElementById","value","password","rnd","Math","round","random","hash","md5","console","log","className","type","placeholder","onClick","React","Component","Canvas","options","Object","canvas","createElement","getElementsByClassName","appendChild","context","getContext","width","height","fillStyle","fillRect","img","x","y","drawImage","rect","fill","Game","updateRequest","SPRITE","GRASS","window","Image","DECOR","src","require","scene","clear","field","i","length","j","drawImageScale","renderScene","update","logout","App","server","state","isAuth","val","setState","updateScene","auth","ReactDOM","render"],"mappings":"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","file":"static/js/main.e486dba7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Grass_A.62e0b3b4.png\";","module.exports = __webpack_public_path__ + \"static/media/Decor_B.9d6c3437.png\";","export default class Server {\r\n\r\n    HOST = 'http://vm21/api/?';\r\n\r\n    async send(method, data) {\r\n        let arr = [];\r\n        for (let key in data) {\r\n            arr.push(`${key}=${data[key]}`);\r\n        }\r\n        const response = await fetch(`${this.HOST}method=${method}&${arr.join('&')}`);\r\n        const answer = await response.json();\r\n        return (answer && answer.result === 'ok') ? answer.data : false;\r\n    }\r\n\r\n    /********************/\r\n    /* Про пользователя */\r\n    /********************/\r\n\r\n    async auth(data) {\r\n        return this.send('login', data);\r\n    }\r\n\r\n    /************/\r\n    /* Про игру */\r\n    /************/\r\n\r\n    move(id, direction) {\r\n        return this.send('move', { id, direction });\r\n    }\r\n\r\n    checkEndGame() {\r\n        return this.send('checkEndGame',{});\r\n    }\r\n\r\n    shoot(id) {\r\n        return this.send('shoot', { id });\r\n    }\r\n\r\n    updateScene() {\r\n        return this.send('update', {});\r\n    }\r\n}","import md5 from 'md5';\r\nimport React from 'react';\r\nclass Auth extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.authRequest = props.authRequest;\r\n        this.setAuth = props.setAuth;\r\n    }\r\n\r\n    async login() {\r\n        const login = document.getElementById('login').value;\r\n        const password = document.getElementById('password').value;\r\n        if (login && password) {\r\n            const rnd = Math.round(Math.random() * 100000);\r\n            const hash = md5(md5(login + password) + rnd);\r\n            const result =  await this.authRequest({login, hash, rnd});\r\n            if(result){\r\n                this.setAuth(true);\r\n            }\r\n            console.log(result);\r\n            \r\n        } else {\r\n            console.log('Не хватает данных!');\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth\">\r\n                <h1>Авторизация!!!</h1>\r\n                <input type='text' id='login' placeholder='Логин'></input><br />\r\n                <input type='password' id='password' placeholder='Пароль'></input><br />\r\n                <button onClick={() => this.login()}>Нажми меня</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;","export default class Canvas {\n    constructor(options) {\n        options = (options instanceof Object) ? options : {};\n        if (options.id) {\n            this.canvas = document.getElementById(options.id);\n        } else {\n            this.canvas = document.createElement('canvas');\n            document.getElementsByClassName('game')[0].appendChild(this.canvas);\n        }\n        this.context = this.canvas.getContext('2d');\n        //Настройки размера окна\n        this.canvas.width = options.width || 500;\n        this.canvas.height = options.height || 500;\n    }\n\n    //Очистить экран\n    clear() {\n        this.context.fillStyle = '#eeeeee';\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    //нарисовать изображение\n    drawImage(img, x, y) {\n        this.context.drawImage(img, x, y);\n    }\n\n    drawImageScale(img, x, y, width, height) {\n        this.context.drawImage(img, 0, 0, img.width, img.height, x, y, width, height);\n    }\n\n    drawRect() {\n        this.context.fillStyle = '#ffffff';\n        this.context.rect(10, 10, 100, 100);\n        this.context.fill();\n    }\n}","import React from 'react';\r\nimport Canvas from '../modules/Canvas';\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        // коллбеки\r\n        this.setAuth = props.setAuth;\r\n        this.updateRequest = props.updateRequest;\r\n        // спрайты (картинки)\r\n        this.SPRITE = {\r\n            GRASS: new window.Image(),\r\n            DECOR: new window.Image()\r\n        };\r\n        this.SPRITE.GRASS.src = require('../img/Blocks/Grass_A.png');\r\n        this.SPRITE.DECOR.src = require('../img/Blocks/Decor_B.png');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.canvas = new Canvas({ id: 'canvas' });\r\n    }\r\n\r\n    renderScene(scene) {\r\n        this.canvas.clear();\r\n        const field = scene.field;\r\n        for (let i = 0; i < field.length; i++){\r\n            for (let j = 0; j < field[i].length; j++){\r\n                if (field[j][i] === 0) this.canvas.drawImageScale(this.SPRITE.GRASS, i*50, j*50, 50, 50);\r\n                if (field[j][i] > 0) this.canvas.drawImageScale(this.SPRITE.DECOR, i*50, j*50, 50, 50);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    logout() {\r\n        this.setAuth(false);\r\n    }\r\n\r\n    async update() {\r\n        const scene = await this.updateRequest();\r\n        this.renderScene(scene);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <h1>Игра!!!</h1>\r\n                <button onClick={() => this.update()}>Начать игру</button><br />\r\n                <button onClick={ () => this.logout() }>Выйди отсюда</button><br/>\r\n                <canvas id='canvas'></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './css/App.css';\n\n// модули\nimport Server from './modules/Server';\n// компоненты\nimport Auth from './components/auth';\nimport Game from './components/game';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n    this.server = new Server();\n    this.state = {\n      isAuth: false\n    }\n\t}\n\n  setAuth(val){\n    this.setState({isAuth: val});\n  }\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>ВМ-мехи!!!</h1>\n        {this.state.isAuth \n         ? <Game\n              setAuth = {(val) => this.setAuth(val)}\n              updateRequest={() => this.server.updateScene()}\n            />\n         : <Auth \n              setAuth = {(val) => this.setAuth(val)} \n              authRequest = {data => this.server.auth(data)} \n            />\n        }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}